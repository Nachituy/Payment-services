name: Deploy to ECR

on:
 push:
  branches: [ "main" ]

jobs:
   build:
    name: Build Image
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN}}
        aws-region: us-east-1
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: obligatorio
        IMAGE_TAG: payments_image
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
    - name: Cached   
      uses: actions/cache@v2
      id: config 
      with:
          path: ./kubernetes
          key: ${{ github.sha }}-config    
        
        
      
   deploy:
    name: Deploy Image EKS
    runs-on: ubuntu-latest
    needs: build
    
    steps:
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
            aws-region: us-east-1
        
        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1
   
        - name: Cached     
          uses: actions/cache@v2
          id: config
          with:
           path: ./kubernetes
           key: ${{ github.sha }}-config    
                       
        - name: working with Kubernetes 
          run: |
            aws eks update-kubeconfig --region us-east-1 --name Cluster-PROD
            #    #kubectl run orders --image=$RELEASE_IMAGE --port=8080 --image-pull-policy Always -l app=orders 
            kubectl apply -f kubernetes/pod.yml  -f kubernetes/services.yml -f kubernetes/networking.yml  
         # env:
         #    KUBE_CONFIG_DATA: $KUBE_CONFIG
         #    ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
         #    ECR_REPOSITORY: obligatorio
         #    IMAGE_TAG: orders_image
         #    RELEASE_IMAGE: 612686574181.dkr.ecr.us-east-1.amazonaws.com/obligatorio:orders_image
        
        #- name: Check Rolling Update
        #  run: 
